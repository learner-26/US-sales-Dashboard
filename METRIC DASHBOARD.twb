<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0208.0337                               -->
<workbook original-version='18.1' source-build='2024.1.0 (20241.24.0208.0337)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Choose a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
        <calculation class='tableau' formula='&quot;Profit&quot;' />
        <members>
          <member value='&quot;Revenue&quot;' />
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Cost of Goods&quot;' />
          <member value='&quot;Units Sold&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' inline='true' name='federated.09u8r4q11hi3rw1aqvfja17wj3q0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='soft_drink_sales' name='textscan.000p23q1bc6gz218qrrs00hpjpn8'>
            <connection class='textscan' directory='C:/Users/mansi/OneDrive/Pictures' filename='soft_drink_sales.csv' password='' server='' />
          </named-connection>
          <named-connection caption='us_ak_hi_states_shift_conformal_faux_WM' name='ogrdirect.0cu10hg0iwoss810kwwu407l52d5'>
            <connection class='ogrdirect' directory='C:/Users/mansi/OneDrive/Pictures/states_and_counties_boom' filename='us_ak_hi_states_shift_conformal_faux_WM.shp' password='' server='' tablename='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.000p23q1bc6gz218qrrs00hpjpn8' name='soft_drink_sales.csv' table='[soft_drink_sales#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Product' ordinal='0' />
            <column datatype='string' name='Company' ordinal='1' />
            <column datatype='string' name='Category' ordinal='2' />
            <column datatype='integer' name='Units Sold' ordinal='3' />
            <column datatype='integer' name='Revenue' ordinal='4' />
            <column datatype='integer' name='Cost of Goods Sold' ordinal='5' />
            <column datatype='integer' name='Profit' ordinal='6' />
            <column datatype='date' name='Purchase Date' ordinal='7' />
            <column datatype='string' name='Customer Name' ordinal='8' />
            <column datatype='string' name='Customer State' ordinal='9' />
            <column datatype='string' name='Customer City' ordinal='10' />
            <column datatype='integer' name='Customer Zip Code' ordinal='11' />
            <column datatype='string' name='Order ID' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.000p23q1bc6gz218qrrs00hpjpn8' name='soft_drink_sales.csv' table='[soft_drink_sales#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Product' ordinal='0' />
              <column datatype='string' name='Company' ordinal='1' />
              <column datatype='string' name='Category' ordinal='2' />
              <column datatype='integer' name='Units Sold' ordinal='3' />
              <column datatype='integer' name='Revenue' ordinal='4' />
              <column datatype='integer' name='Cost of Goods Sold' ordinal='5' />
              <column datatype='integer' name='Profit' ordinal='6' />
              <column datatype='date' name='Purchase Date' ordinal='7' />
              <column datatype='string' name='Customer Name' ordinal='8' />
              <column datatype='string' name='Customer State' ordinal='9' />
              <column datatype='string' name='Customer City' ordinal='10' />
              <column datatype='integer' name='Customer Zip Code' ordinal='11' />
              <column datatype='string' name='Order ID' ordinal='12' />
            </columns>
          </relation>
          <relation connection='ogrdirect.0cu10hg0iwoss810kwwu407l52d5' name='us_ak_hi_states_shift_conformal_faux_WM.shp' table='[us_ak_hi_states_shift_conformal_faux_WM.shp]' type='table'>
            <columns>
              <column datatype='string' name='STATEFP' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
              <column datatype='spatial' name='Geometry' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Company</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Units Sold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Units Sold]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Units Sold</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Revenue]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Revenue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Goods Sold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cost of Goods Sold]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Cost of Goods Sold</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purchase Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Purchase Date]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Purchase Date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer State]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer City]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer City</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Zip Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Customer Zip Code]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer Zip Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATEFP</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATEFP]</local-name>
            <parent-name>[us_ak_hi_states_shift_conformal_faux_WM.shp]</parent-name>
            <remote-alias>STATEFP</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_ak_hi_states_shift_conformal_faux_WM.shp_B108C85DD5154FAA9717A1EA998A67BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[us_ak_hi_states_shift_conformal_faux_WM.shp]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_ak_hi_states_shift_conformal_faux_WM.shp_B108C85DD5154FAA9717A1EA998A67BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[us_ak_hi_states_shift_conformal_faux_WM.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>15</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_ak_hi_states_shift_conformal_faux_WM.shp_B108C85DD5154FAA9717A1EA998A67BE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Metric Calculation' datatype='integer' name='[Calculation_80783385947066368]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when &apos;Revenue&apos; THEN [Revenue]&#13;&#10;when &apos;Profit&apos; THEN [Profit]&#13;&#10;when &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;when &apos;Units Sold&apos; THEN [Units Sold]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Customer City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Customer State]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Central&quot;'>
            <value>&quot;Illinois&quot;</value>
            <value>&quot;Indiana&quot;</value>
            <value>&quot;Iowa&quot;</value>
            <value>&quot;Michigan&quot;</value>
            <value>&quot;Minnesota&quot;</value>
            <value>&quot;Missouri&quot;</value>
            <value>&quot;Nebraska&quot;</value>
            <value>&quot;North Dakota&quot;</value>
            <value>&quot;South Dakota&quot;</value>
            <value>&quot;Wisconsin&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;East&quot;'>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;California&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Texas&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;Washington&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;East 2&quot;'>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;Kentucky&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;New Jersey&quot;</value>
            <value>&quot;New York&quot;</value>
            <value>&quot;North Carolina&quot;</value>
            <value>&quot;Ohio&quot;</value>
            <value>&quot;Pennsylvania&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;Vermont&quot;</value>
            <value>&quot;Virginia&quot;</value>
            <value>&quot;West Virginia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;Florida&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Kansas&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;Tennessee&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West&quot;'>
            <value>&quot;Alaska&quot;</value>
            <value>&quot;Hawaii&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Customer Zip Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Statefp' datatype='string' name='[STATEFP]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='soft_drink_sales.csv' datatype='table' name='[__tableau_internal_object_id__].[soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us_ak_hi_states_shift_conformal_faux_WM.shp' datatype='table' name='[__tableau_internal_object_id__].[us_ak_hi_states_shift_conformal_faux_WM.shp_B108C85DD5154FAA9717A1EA998A67BE]' role='measure' type='quantitative' />
      <group caption='Action (Customer State)' hidden='true' name='[Action (Customer State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer State]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Customer State (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Illinois, Iowa, Michigan and 5 more&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Indiana &amp; South Dakota&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East 2&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
          <calculation class='tableau' formula='&quot;Profit&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='soft_drink_sales.csv' id='soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23'>
            <properties context=''>
              <relation connection='textscan.000p23q1bc6gz218qrrs00hpjpn8' name='soft_drink_sales.csv' table='[soft_drink_sales#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Product' ordinal='0' />
                  <column datatype='string' name='Company' ordinal='1' />
                  <column datatype='string' name='Category' ordinal='2' />
                  <column datatype='integer' name='Units Sold' ordinal='3' />
                  <column datatype='integer' name='Revenue' ordinal='4' />
                  <column datatype='integer' name='Cost of Goods Sold' ordinal='5' />
                  <column datatype='integer' name='Profit' ordinal='6' />
                  <column datatype='date' name='Purchase Date' ordinal='7' />
                  <column datatype='string' name='Customer Name' ordinal='8' />
                  <column datatype='string' name='Customer State' ordinal='9' />
                  <column datatype='string' name='Customer City' ordinal='10' />
                  <column datatype='integer' name='Customer Zip Code' ordinal='11' />
                  <column datatype='string' name='Order ID' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us_ak_hi_states_shift_conformal_faux_WM.shp' id='us_ak_hi_states_shift_conformal_faux_WM.shp_B108C85DD5154FAA9717A1EA998A67BE'>
            <properties context=''>
              <relation connection='ogrdirect.0cu10hg0iwoss810kwwu407l52d5' name='us_ak_hi_states_shift_conformal_faux_WM.shp' table='[us_ak_hi_states_shift_conformal_faux_WM.shp]' type='table'>
                <columns>
                  <column datatype='string' name='STATEFP' ordinal='0' />
                  <column datatype='string' name='Name' ordinal='1' />
                  <column datatype='spatial' name='Geometry' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Customer State]' />
              <expression op='[Name]' />
            </expression>
            <first-end-point object-id='soft_drink_sales.csv_FF69AA38AAAE4387AFED3FEF3A0E2D23' />
            <second-end-point object-id='us_ak_hi_states_shift_conformal_faux_WM.shp_B108C85DD5154FAA9717A1EA998A67BE' unique-key='true' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.09u8r4q11hi3rw1aqvfja17wj3q0'>
      <datasources>
        <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.09u8r4q11hi3rw1aqvfja17wj3q0' />
      </datasources>
      <datasource-dependencies datasource='federated.09u8r4q11hi3rw1aqvfja17wj3q0'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Company]' role='dimension' type='nominal' />
        <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[Customer State]' default='&quot;Other&quot;' new-bin='true'>
            <bin default-name='false' value='&quot;Central&quot;'>
              <value>&quot;Illinois&quot;</value>
              <value>&quot;Indiana&quot;</value>
              <value>&quot;Iowa&quot;</value>
              <value>&quot;Michigan&quot;</value>
              <value>&quot;Minnesota&quot;</value>
              <value>&quot;Missouri&quot;</value>
              <value>&quot;Nebraska&quot;</value>
              <value>&quot;North Dakota&quot;</value>
              <value>&quot;South Dakota&quot;</value>
              <value>&quot;Wisconsin&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;East&quot;'>
              <value>&quot;Arizona&quot;</value>
              <value>&quot;California&quot;</value>
              <value>&quot;Colorado&quot;</value>
              <value>&quot;Idaho&quot;</value>
              <value>&quot;Montana&quot;</value>
              <value>&quot;Nevada&quot;</value>
              <value>&quot;New Mexico&quot;</value>
              <value>&quot;Oregon&quot;</value>
              <value>&quot;Texas&quot;</value>
              <value>&quot;Utah&quot;</value>
              <value>&quot;Washington&quot;</value>
              <value>&quot;Wyoming&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;East 2&quot;'>
              <value>&quot;Connecticut&quot;</value>
              <value>&quot;Delaware&quot;</value>
              <value>&quot;Kentucky&quot;</value>
              <value>&quot;Maine&quot;</value>
              <value>&quot;Maryland&quot;</value>
              <value>&quot;Massachusetts&quot;</value>
              <value>&quot;New Hampshire&quot;</value>
              <value>&quot;New Jersey&quot;</value>
              <value>&quot;New York&quot;</value>
              <value>&quot;North Carolina&quot;</value>
              <value>&quot;Ohio&quot;</value>
              <value>&quot;Pennsylvania&quot;</value>
              <value>&quot;Rhode Island&quot;</value>
              <value>&quot;South Carolina&quot;</value>
              <value>&quot;Vermont&quot;</value>
              <value>&quot;Virginia&quot;</value>
              <value>&quot;West Virginia&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South&quot;'>
              <value>&quot;Alabama&quot;</value>
              <value>&quot;Arkansas&quot;</value>
              <value>&quot;Florida&quot;</value>
              <value>&quot;Georgia&quot;</value>
              <value>&quot;Kansas&quot;</value>
              <value>&quot;Mississippi&quot;</value>
              <value>&quot;Oklahoma&quot;</value>
              <value>&quot;Tennessee&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;West&quot;'>
              <value>&quot;Alaska&quot;</value>
              <value>&quot;Hawaii&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
        <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Customer State (group)]'>
        <groupfilter function='level-members' level='[Customer State (group)]' />
      </filter>
      <filter class='categorical' column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Category:nk]'>
        <groupfilter function='level-members' level='[none:Category:nk]' />
      </filter>
      <filter class='categorical' column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Company:nk]'>
        <groupfilter function='level-members' level='[none:Company:nk]' />
      </filter>
      <filter class='quantitative' column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[tqr:Purchase Date:qk]' included-values='in-range'>
        <min>#2020-01-01 00:00:00#</min>
        <max>#2023-07-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_751CB9B50694405EAB0960D5E6BEC1A2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Map' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Choose a metric' />
        <param name='target' value='Map' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='BANS'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.09u8r4q11hi3rw1aqvfja17wj3q0' />
          </datasources>
          <datasource-dependencies datasource='federated.09u8r4q11hi3rw1aqvfja17wj3q0'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East 2&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost of Goods Sold]' derivation='Sum' name='[sum:Cost of Goods Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue]' derivation='Sum' name='[sum:Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Units Sold]' derivation='Sum' name='[sum:Units Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Units Sold:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Cost of Goods Sold:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Revenue:qk]&quot;</bucket>
              <bucket>&quot;[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Units Sold:qk]&quot;</bucket>
              <bucket>&quot;[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Cost of Goods Sold:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Revenue:qk]' included-values='in-range' />
          <slices>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Revenue:qk]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[:Measure Names]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[tqr:Purchase Date:qk]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Customer State (group)]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Company:nk]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#5500ff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Multiple Values]' />
              <text column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='18'><![CDATA[<[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Multiple Values]>]]></run>
                <run>Ã†&#10;</run>
                <run fontsize='14'><![CDATA[<[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[:Measure Names]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D6120C1A-23E6-4B6C-92BC-C5595A84E806}' />
    </worksheet>
    <worksheet name='CUSTOMER'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run fontalignment='1'>&gt; by Customer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.09u8r4q11hi3rw1aqvfja17wj3q0' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09u8r4q11hi3rw1aqvfja17wj3q0'>
            <column caption='Metric Calculation' datatype='integer' name='[Calculation_80783385947066368]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when &apos;Revenue&apos; THEN [Revenue]&#13;&#10;when &apos;Profit&apos; THEN [Profit]&#13;&#10;when &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;when &apos;Units Sold&apos; THEN [Units Sold]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East 2&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_80783385947066368]' derivation='Sum' name='[sum:Calculation_80783385947066368:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Calculation_80783385947066368:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[tqr:Purchase Date:qk]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Customer State (group)]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Company:nk]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Calculation_80783385947066368:qk]' scope='cols' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Customer Name:nk]</rows>
        <cols>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Calculation_80783385947066368:qk]</cols>
      </table>
      <simple-id uuid='{8AA7BAC5-76C3-4983-9CE6-424B438905AE}' />
    </worksheet>
    <worksheet name='LINE CHART'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run fontalignment='1'>&gt; by Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.09u8r4q11hi3rw1aqvfja17wj3q0' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09u8r4q11hi3rw1aqvfja17wj3q0'>
            <column caption='Metric Calculation' datatype='integer' name='[Calculation_80783385947066368]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when &apos;Revenue&apos; THEN [Revenue]&#13;&#10;when &apos;Profit&apos; THEN [Profit]&#13;&#10;when &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;when &apos;Units Sold&apos; THEN [Units Sold]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East 2&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_80783385947066368]' derivation='Sum' name='[sum:Calculation_80783385947066368:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Customer State (group)]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Category:nk]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Company:nk]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[tqr:Purchase Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Calculation_80783385947066368:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[tmn:Purchase Date:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[tmn:Purchase Date:qk]' field-type='quantitative' max='#2026-01-21 12:50:53.554#' min='#2018-10-18 01:25:09.854#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Calculation_80783385947066368:qk]' field-type='quantitative' max='1857957' min='-354953' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Calculation_80783385947066368:qk]</rows>
        <cols>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[tmn:Purchase Date:qk]</cols>
      </table>
      <simple-id uuid='{A94A319C-9DD8-4C32-B268-0B69768B8F69}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run fontalignment='1'>&gt; By State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.09u8r4q11hi3rw1aqvfja17wj3q0' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09u8r4q11hi3rw1aqvfja17wj3q0'>
            <column caption='Metric Calculation' datatype='integer' name='[Calculation_80783385947066368]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when &apos;Revenue&apos; THEN [Revenue]&#13;&#10;when &apos;Profit&apos; THEN [Profit]&#13;&#10;when &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;when &apos;Units Sold&apos; THEN [Units Sold]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East 2&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State]' derivation='None' name='[none:Customer State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_80783385947066368]' derivation='Sum' name='[sum:Calculation_80783385947066368:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Customer State (group)]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Company:nk]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Category:nk]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[tqr:Purchase Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Longitude (generated)]' field-type='quantitative' max='5848109.6159399571' min='-5226594.2970604077' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Latitude (generated)]' field-type='quantitative' max='2315766.7625418641' min='-6783168.6065790001' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[clct:Geometry:nk]' />
              <lod column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Customer State:nk]' />
              <color column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Calculation_80783385947066368:qk]' />
              <geometry column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Customer State:nk]>]]></run>
                <run>Ã†&#10;</run>
                <run bold='true'><![CDATA[<[Parameters].[Parameter 1]>         <[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Calculation_80783385947066368:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Latitude (generated)]</rows>
        <cols>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D051EB75-85A3-4C54-878C-475480E678BF}' />
    </worksheet>
    <worksheet name='PRODUCT'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>[Parameters].[Parameter 1]</run>
            <run fontalignment='1'>&gt; by product</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.09u8r4q11hi3rw1aqvfja17wj3q0' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09u8r4q11hi3rw1aqvfja17wj3q0'>
            <column caption='Metric Calculation' datatype='integer' name='[Calculation_80783385947066368]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when &apos;Revenue&apos; THEN [Revenue]&#13;&#10;when &apos;Profit&apos; THEN [Profit]&#13;&#10;when &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;when &apos;Units Sold&apos; THEN [Units Sold]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East 2&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_80783385947066368]' derivation='Sum' name='[sum:Calculation_80783385947066368:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Product:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Calculation_80783385947066368:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[tqr:Purchase Date:qk]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Customer State (group)]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Company:nk]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Calculation_80783385947066368:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Product:nk]</rows>
        <cols>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Calculation_80783385947066368:qk]</cols>
      </table>
      <simple-id uuid='{40C9E6F0-9F77-48CE-ABE6-DF81D9437255}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.09u8r4q11hi3rw1aqvfja17wj3q0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09u8r4q11hi3rw1aqvfja17wj3q0'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East 2&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State]' derivation='None' name='[none:Customer State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[tqr:Purchase Date:qk]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Customer State (group)]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Company:nk]</column>
            <column>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Longitude (generated)]' field-type='quantitative' max='6176861.0902385665' min='-2916091.2522258479' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Latitude (generated)]' field-type='quantitative' max='2206738.3443412022' min='-3065505.6413389905' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[clct:Geometry:nk]' />
              <lod column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Customer State:nk]' />
              <color column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Customer State (group)]' />
              <geometry column='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[clct:Geometry:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Latitude (generated)]</rows>
        <cols>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{55CF2ADA-3641-4031-AAD6-70E6539ED50B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1300' maxwidth='2000' minheight='1300' minwidth='2000' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.09u8r4q11hi3rw1aqvfja17wj3q0' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose a metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
          <calculation class='tableau' formula='&quot;Profit&quot;' />
          <members>
            <member value='&quot;Revenue&quot;' />
            <member value='&quot;Profit&quot;' />
            <member value='&quot;Cost of Goods&quot;' />
            <member value='&quot;Units Sold&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.09u8r4q11hi3rw1aqvfja17wj3q0'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Company]' role='dimension' type='nominal' />
        <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[Customer State]' default='&quot;Other&quot;' new-bin='true'>
            <bin default-name='false' value='&quot;Central&quot;'>
              <value>&quot;Illinois&quot;</value>
              <value>&quot;Indiana&quot;</value>
              <value>&quot;Iowa&quot;</value>
              <value>&quot;Michigan&quot;</value>
              <value>&quot;Minnesota&quot;</value>
              <value>&quot;Missouri&quot;</value>
              <value>&quot;Nebraska&quot;</value>
              <value>&quot;North Dakota&quot;</value>
              <value>&quot;South Dakota&quot;</value>
              <value>&quot;Wisconsin&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;East&quot;'>
              <value>&quot;Arizona&quot;</value>
              <value>&quot;California&quot;</value>
              <value>&quot;Colorado&quot;</value>
              <value>&quot;Idaho&quot;</value>
              <value>&quot;Montana&quot;</value>
              <value>&quot;Nevada&quot;</value>
              <value>&quot;New Mexico&quot;</value>
              <value>&quot;Oregon&quot;</value>
              <value>&quot;Texas&quot;</value>
              <value>&quot;Utah&quot;</value>
              <value>&quot;Washington&quot;</value>
              <value>&quot;Wyoming&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;East 2&quot;'>
              <value>&quot;Connecticut&quot;</value>
              <value>&quot;Delaware&quot;</value>
              <value>&quot;Kentucky&quot;</value>
              <value>&quot;Maine&quot;</value>
              <value>&quot;Maryland&quot;</value>
              <value>&quot;Massachusetts&quot;</value>
              <value>&quot;New Hampshire&quot;</value>
              <value>&quot;New Jersey&quot;</value>
              <value>&quot;New York&quot;</value>
              <value>&quot;North Carolina&quot;</value>
              <value>&quot;Ohio&quot;</value>
              <value>&quot;Pennsylvania&quot;</value>
              <value>&quot;Rhode Island&quot;</value>
              <value>&quot;South Carolina&quot;</value>
              <value>&quot;Vermont&quot;</value>
              <value>&quot;Virginia&quot;</value>
              <value>&quot;West Virginia&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South&quot;'>
              <value>&quot;Alabama&quot;</value>
              <value>&quot;Arkansas&quot;</value>
              <value>&quot;Florida&quot;</value>
              <value>&quot;Georgia&quot;</value>
              <value>&quot;Kansas&quot;</value>
              <value>&quot;Mississippi&quot;</value>
              <value>&quot;Oklahoma&quot;</value>
              <value>&quot;Tennessee&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;West&quot;'>
              <value>&quot;Alaska&quot;</value>
              <value>&quot;Hawaii&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
        <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98770' id='13' param='horz' type-v2='layout-flow' w='99200' x='400' y='615'>
            <zone h='98770' id='11' type-v2='layout-basic' w='99200' x='400' y='615' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='100714' id='3' param='vert' type-v2='layout-flow' w='100167' x='0' y='0'>
          <zone fixed-size='161' h='12385' id='6' is-fixed='true' param='horz' type-v2='layout-flow' w='100167' x='0' y='0'>
            <zone forceUpdate='true' h='12385' id='7' type-v2='text' w='55767' x='0' y='0'>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff' fontname='Tableau Bold' fontsize='15'>KPI DASHBOARD</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='880' h='12385' id='8' is-fixed='true' name='BANS' w='44400' x='55767' y='0'>
              <layout-cache cell-count-h='1' non-cell-size-h='15' type-h='cell' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='background-color' value='#5500ff' />
            </zone-style>
          </zone>
          <zone h='72483' id='20' param='horz' type-v2='layout-flow' w='100167' x='0' y='12385' />
          <zone fixed-size='206' h='15846' id='9' is-fixed='true' param='horz' type-v2='layout-flow' w='100167' x='0' y='84868'>
            <zone fixed-size='662' h='15846' id='19' is-fixed='true' param='vert' type-v2='layout-flow' w='100167' x='0' y='84868' />
          </zone>
        </zone>
        <zone fixed-size='339' h='44769' id='10' is-fixed='true' name='Map' w='31950' x='64100' y='16077'>
          <layout-cache minheight='257' minwidth='200' type-h='scalable' type-w='scalable' />
        </zone>
        <zone h='48077' id='21' name='LINE CHART' w='48350' x='11550' y='16385'>
          <layout-cache minheight='189' minwidth='162' type-h='scalable' type-w='scalable' />
        </zone>
        <zone h='43846' id='22' name='CUSTOMER' w='44250' x='62000' y='44154'>
          <layout-cache fixed-size-h='186809' type-h='fixed' type-w='fixed' />
        </zone>
        <zone h='38769' id='23' name='PRODUCT' w='46150' x='13900' y='66154'>
          <layout-cache fixed-size-h='289' type-h='fixed' type-w='fixed' />
        </zone>
        <zone fixed-size='160' h='67462' id='12' is-fixed='true' param='vert' type-v2='layout-flow' w='8000' x='2150' y='19923'>
          <zone fixed-size='109' h='9000' id='14' is-fixed='true' name='Map' param='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[tqr:Purchase Date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='8000' x='2150' y='19923'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='13461' id='15' name='Map' param='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Category:nk]' type-v2='filter' w='8000' x='2150' y='28923'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='11384' id='16' name='Map' param='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Company:nk]' type-v2='filter' w='8000' x='2150' y='42384'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='17615' id='17' name='Map' param='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Customer State (group)]' type-v2='filter' w='8000' x='2150' y='53768'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='168' h='13538' id='18' is-fixed='true' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='8000' x='2150' y='71383'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <simple-id uuid='{5883E579-EA80-41B7-AFD3-499EDB0D5604}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[tqr:Purchase Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Category:nk]' type='filter' />
            <card param='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Company:nk]' type='filter' />
            <card param='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Customer State (group)]' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[dy:Purchase Date:ok]</field>
            <field>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Customer State:nk]</field>
            <field>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[sum:Calculation_80783385947066368:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12E9110F-FBEB-46FC-B4D3-82A36B653034}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[tqr:Purchase Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Customer State (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Customer State (group)]</field>
            <field>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[clct:Geometry:nk]</field>
            <field>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Customer State:nk]</field>
            <field>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[qr:Purchase Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='8' />
      </viewpoint>
      <simple-id uuid='{33F3C59D-9052-4FB5-B008-C102413463C2}' />
    </window>
    <window class='worksheet' name='BANS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[:Measure Names]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{0C00852E-172B-4F62-A55B-832B3A8C07D0}' />
    </window>
    <window class='worksheet' name='PRODUCT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AE8A1A88-932D-4BC7-8658-525240359922}' />
    </window>
    <window class='worksheet' name='CUSTOMER'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Category:nk]' type='filter' />
            <card param='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Company:nk]' type='filter' />
            <card param='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[Customer State (group)]' type='filter' />
            <card param='[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[tqr:Purchase Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F79218AF-9F41-4EFF-8FEE-1EA1012E2E03}' />
    </window>
    <window class='worksheet' name='LINE CHART'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09u8r4q11hi3rw1aqvfja17wj3q0].[yr:Purchase Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C6D6EB5C-11EC-4E40-AD50-D6AA2B9988AB}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='BANS'>
          <zoom type='fit-height' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='CUSTOMER' />
        <viewpoint name='LINE CHART'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='PRODUCT' />
      </viewpoints>
      <active id='18' />
      <simple-id uuid='{AC3B8C60-FD18-42F0-9192-B54365C45313}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='93' name='BANS' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CUSTOMER' width='192'>
      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
      wP8DHzK6v3R9PacAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='LINE CHART' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='PRODUCT' width='192'>
      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
      /wPX2iv2G2DDQwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
